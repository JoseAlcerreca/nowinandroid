name: Build

on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: write
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout base branch first
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties        

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
#
#      # TODO: Explain why --no-configuration-cache
#      - name: Check spotless
#        run: ./gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache
#
#      - name: Check lint
#        run: ./gradlew lintDemoDebug

#      - name: Build all build type and flavor permutations
#        run: ./gradlew assembleDemoDebug

      - name: Record screenshot tests (Roborazzi)
        id: screenshots-verify
        run: | 
          ./gradlew :feature:foryou:recordRoborazziDemoDebug
        

      - name: Generate md5 hashes
        run: | 
          ls screenshots/
          find screenshots/ -type f -name "*.png" -exec md5sum {} + | awk '{print $1 > $2 ".md5"}' 

      - name: Check out the PR branch
        run: | 
          git checkout ${{ github.event.pull_request.head.ref }} 

      - name: Run all local screenshot tests (Roborazzi)
        id: screenshots-verify
        run: ./gradlew :feature:foryou:verifyAndRecordRoborazziDemoDebug

      - name: Generate the new md5 hashes
        run: |
          ls screenshots/
          find screenshots/ -type f -name "*.png" ! -name "*_compare.png" -exec md5sum {} + | awk '{print $1 > $2 ".md5"}' 

      # Runs if previous job failed
      - name: Push new screenshot md5s if failed
        if: always() # TODO steps.screenshots-verify.outputs.exit_code != 0 #TODO: github.event_name == 'pull_request'
        run: |
          ./gradlew :feature:foryou:recordRoborazziDemoDebug
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          ls
          git add screenshots/*.md5
          git commit -m "ðŸ¤– Updates screenshots"
          git push

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}  # To enable git push

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v3
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: app/build/reports
